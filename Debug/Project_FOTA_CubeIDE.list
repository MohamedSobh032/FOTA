
Project_FOTA_CubeIDE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000348  08000350  00010350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000348  08000348  00010350  2**0
                  CONTENTS
  4 .ARM          00000000  08000348  08000348  00010350  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000348  08000350  00010350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000348  08000348  00010348  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800034c  0800034c  0001034c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000000  08000350  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  08000350  00020030  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010350  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010380  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000844  00000000  00000000  000103c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002ed  00000000  00000000  00010c07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00010ef8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000e9  00000000  00000000  00011048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000787  00000000  00000000  00011131  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000a03  00000000  00000000  000118b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004ec9  00000000  00000000  000122bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000458  00000000  00000000  00017184  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000175dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000330 	.word	0x08000330

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000330 	.word	0x08000330

080001d4 <SysTick_Handler>:
/* Func. Name: SysTick_Handler           */
/* i/p arguments: nothing                */
/* o/p arguments: nothing                */
/* Desc. : This API is SysTick Interrupt */
/*****************************************/
void SysTick_Handler() {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
    if (Global_u8CallMode == MSTK_SINGLE_CALL_MODE) {
 80001d8:	4b10      	ldr	r3, [pc, #64]	; (800021c <SysTick_Handler+0x48>)
 80001da:	781b      	ldrb	r3, [r3, #0]
 80001dc:	2b00      	cmp	r3, #0
 80001de:	d111      	bne.n	8000204 <SysTick_Handler+0x30>
        /* Disable INT */
        CLR_BIT(STK_CTRL,MSTK_CTRL_TICKINT_BIT);
 80001e0:	4b0f      	ldr	r3, [pc, #60]	; (8000220 <SysTick_Handler+0x4c>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	4a0e      	ldr	r2, [pc, #56]	; (8000220 <SysTick_Handler+0x4c>)
 80001e6:	f023 0302 	bic.w	r3, r3, #2
 80001ea:	6013      	str	r3, [r2, #0]
        /* Stop the Timer */
        CLR_BIT(STK_CTRL,MSTK_CTRL_ENABLE_BIT);
 80001ec:	4b0c      	ldr	r3, [pc, #48]	; (8000220 <SysTick_Handler+0x4c>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a0b      	ldr	r2, [pc, #44]	; (8000220 <SysTick_Handler+0x4c>)
 80001f2:	f023 0301 	bic.w	r3, r3, #1
 80001f6:	6013      	str	r3, [r2, #0]
        STK_LOAD = 0;
 80001f8:	4b0a      	ldr	r3, [pc, #40]	; (8000224 <SysTick_Handler+0x50>)
 80001fa:	2200      	movs	r2, #0
 80001fc:	601a      	str	r2, [r3, #0]
        STK_VAL = 0;
 80001fe:	4b0a      	ldr	r3, [pc, #40]	; (8000228 <SysTick_Handler+0x54>)
 8000200:	2200      	movs	r2, #0
 8000202:	601a      	str	r2, [r3, #0]
    }
    if (MSTK_CallBack != NULL) { MSTK_CallBack(); }
 8000204:	4b09      	ldr	r3, [pc, #36]	; (800022c <SysTick_Handler+0x58>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	2b00      	cmp	r3, #0
 800020a:	d002      	beq.n	8000212 <SysTick_Handler+0x3e>
 800020c:	4b07      	ldr	r3, [pc, #28]	; (800022c <SysTick_Handler+0x58>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4798      	blx	r3
    /* Clear Flag */
    (void)GET_BIT(STK_CTRL,MSTK_CTRL_COUNTFLAG_BIT);
 8000212:	4b03      	ldr	r3, [pc, #12]	; (8000220 <SysTick_Handler+0x4c>)
 8000214:	681b      	ldr	r3, [r3, #0]
}
 8000216:	bf00      	nop
 8000218:	bd80      	pop	{r7, pc}
 800021a:	bf00      	nop
 800021c:	20000020 	.word	0x20000020
 8000220:	e000e010 	.word	0xe000e010
 8000224:	e000e014 	.word	0xe000e014
 8000228:	e000e018 	.word	0xe000e018
 800022c:	2000001c 	.word	0x2000001c

08000230 <USART1_IRQHandler>:
{ MUSART2_CallBack = ptr; }
void MUSART6_vSetCallBack(void (*ptr)(void))
{ MUSART6_CallBack = ptr; }


void USART1_IRQHandler(void) {
 8000230:	b580      	push	{r7, lr}
 8000232:	af00      	add	r7, sp, #0
	USART1->SR = 0;
 8000234:	4b03      	ldr	r3, [pc, #12]	; (8000244 <USART1_IRQHandler+0x14>)
 8000236:	2200      	movs	r2, #0
 8000238:	601a      	str	r2, [r3, #0]
	MUSART1_CallBack();
 800023a:	4b03      	ldr	r3, [pc, #12]	; (8000248 <USART1_IRQHandler+0x18>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4798      	blx	r3
}
 8000240:	bf00      	nop
 8000242:	bd80      	pop	{r7, pc}
 8000244:	40011000 	.word	0x40011000
 8000248:	20000024 	.word	0x20000024

0800024c <USART2_IRQHandler>:

void USART2_IRQHandler(void) {
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
	USART2->SR = 0;
 8000250:	4b03      	ldr	r3, [pc, #12]	; (8000260 <USART2_IRQHandler+0x14>)
 8000252:	2200      	movs	r2, #0
 8000254:	601a      	str	r2, [r3, #0]
	MUSART2_CallBack();
 8000256:	4b03      	ldr	r3, [pc, #12]	; (8000264 <USART2_IRQHandler+0x18>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	4798      	blx	r3
}
 800025c:	bf00      	nop
 800025e:	bd80      	pop	{r7, pc}
 8000260:	40004400 	.word	0x40004400
 8000264:	20000028 	.word	0x20000028

08000268 <USART6_IRQHandler>:

void USART6_IRQHandler(void) {
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	USART6->SR = 0;
 800026c:	4b03      	ldr	r3, [pc, #12]	; (800027c <USART6_IRQHandler+0x14>)
 800026e:	2200      	movs	r2, #0
 8000270:	601a      	str	r2, [r3, #0]
	MUSART6_CallBack();
 8000272:	4b03      	ldr	r3, [pc, #12]	; (8000280 <USART6_IRQHandler+0x18>)
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	4798      	blx	r3
}
 8000278:	bf00      	nop
 800027a:	bd80      	pop	{r7, pc}
 800027c:	40011400 	.word	0x40011400
 8000280:	2000002c 	.word	0x2000002c

08000284 <main>:

#include <stdint.h>


int main(void)
{
 8000284:	b480      	push	{r7}
 8000286:	af00      	add	r7, sp, #0
 8000288:	2300      	movs	r3, #0
}
 800028a:	4618      	mov	r0, r3
 800028c:	46bd      	mov	sp, r7
 800028e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000292:	4770      	bx	lr

08000294 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000294:	480d      	ldr	r0, [pc, #52]	; (80002cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000296:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000298:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800029c:	480c      	ldr	r0, [pc, #48]	; (80002d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800029e:	490d      	ldr	r1, [pc, #52]	; (80002d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a0:	4a0d      	ldr	r2, [pc, #52]	; (80002d8 <LoopForever+0xe>)
  movs r3, #0
 80002a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a4:	e002      	b.n	80002ac <LoopCopyDataInit>

080002a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002aa:	3304      	adds	r3, #4

080002ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b0:	d3f9      	bcc.n	80002a6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b2:	4a0a      	ldr	r2, [pc, #40]	; (80002dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b4:	4c0a      	ldr	r4, [pc, #40]	; (80002e0 <LoopForever+0x16>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b8:	e001      	b.n	80002be <LoopFillZerobss>

080002ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002bc:	3204      	adds	r2, #4

080002be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c0:	d3fb      	bcc.n	80002ba <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c2:	f000 f811 	bl	80002e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002c6:	f7ff ffdd 	bl	8000284 <main>

080002ca <LoopForever>:

LoopForever:
  b LoopForever
 80002ca:	e7fe      	b.n	80002ca <LoopForever>
  ldr   r0, =_estack
 80002cc:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80002d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d8:	08000350 	.word	0x08000350
  ldr r2, =_sbss
 80002dc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e0:	20000030 	.word	0x20000030

080002e4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e4:	e7fe      	b.n	80002e4 <ADC_IRQHandler>
	...

080002e8 <__libc_init_array>:
 80002e8:	b570      	push	{r4, r5, r6, lr}
 80002ea:	4d0d      	ldr	r5, [pc, #52]	; (8000320 <__libc_init_array+0x38>)
 80002ec:	4c0d      	ldr	r4, [pc, #52]	; (8000324 <__libc_init_array+0x3c>)
 80002ee:	1b64      	subs	r4, r4, r5
 80002f0:	10a4      	asrs	r4, r4, #2
 80002f2:	2600      	movs	r6, #0
 80002f4:	42a6      	cmp	r6, r4
 80002f6:	d109      	bne.n	800030c <__libc_init_array+0x24>
 80002f8:	4d0b      	ldr	r5, [pc, #44]	; (8000328 <__libc_init_array+0x40>)
 80002fa:	4c0c      	ldr	r4, [pc, #48]	; (800032c <__libc_init_array+0x44>)
 80002fc:	f000 f818 	bl	8000330 <_init>
 8000300:	1b64      	subs	r4, r4, r5
 8000302:	10a4      	asrs	r4, r4, #2
 8000304:	2600      	movs	r6, #0
 8000306:	42a6      	cmp	r6, r4
 8000308:	d105      	bne.n	8000316 <__libc_init_array+0x2e>
 800030a:	bd70      	pop	{r4, r5, r6, pc}
 800030c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000310:	4798      	blx	r3
 8000312:	3601      	adds	r6, #1
 8000314:	e7ee      	b.n	80002f4 <__libc_init_array+0xc>
 8000316:	f855 3b04 	ldr.w	r3, [r5], #4
 800031a:	4798      	blx	r3
 800031c:	3601      	adds	r6, #1
 800031e:	e7f2      	b.n	8000306 <__libc_init_array+0x1e>
 8000320:	08000348 	.word	0x08000348
 8000324:	08000348 	.word	0x08000348
 8000328:	08000348 	.word	0x08000348
 800032c:	0800034c 	.word	0x0800034c

08000330 <_init>:
 8000330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000332:	bf00      	nop
 8000334:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000336:	bc08      	pop	{r3}
 8000338:	469e      	mov	lr, r3
 800033a:	4770      	bx	lr

0800033c <_fini>:
 800033c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800033e:	bf00      	nop
 8000340:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000342:	bc08      	pop	{r3}
 8000344:	469e      	mov	lr, r3
 8000346:	4770      	bx	lr
